version: '2.3'
services:
   cgl:
      image: typo3/core-testing-${DOCKER_PHP_IMAGE}:latest
      user: "${HOST_UID}"
      volumes:
         - ${ROOT_DIR}:${ROOT_DIR}
      working_dir: ${ROOT_DIR}
      extra_hosts:
         - "host.docker.internal:host-gateway"
      command: >
         /bin/sh -c "
           if [ ${SCRIPT_VERBOSE} -eq 1 ]; then
             set -x
           fi
           php -v | grep '^PHP';
           php -dxdebug.mode=off \
             .Build/bin/php-cs-fixer fix \
               -v \
               ${CGLCHECK_DRY_RUN} \
               --config=.php-cs-fixer.dist.php  \
               --using-cache=no .
         "

   composer_update:
      image: typo3/core-testing-${DOCKER_PHP_IMAGE}:latest
      user: "${HOST_UID}"
      volumes:
         - ${ROOT_DIR}:${ROOT_DIR}
      working_dir: ${ROOT_DIR}
      environment:
         COMPOSER_CACHE_DIR: ".Build/.cache/composer"
      command: >
         /bin/sh -c "
           if [ ${SCRIPT_VERBOSE} -eq 1 ]; then
             set -x
           fi
           php -v | grep '^PHP';
           if [ ${DOCKER_PHP_IMAGE} = "php82" ]; then
             # @todo: Needed until prophecy (req by phpunit) allows PHP 8.2, https://github.com/phpspec/prophecy/issues/556
             composer update --no-progress --no-interaction --ignore-platform-req=php+
           else
             composer update --no-progress --no-interaction;
           fi
         "

   composer_validate:
      image: typo3/core-testing-${DOCKER_PHP_IMAGE}:latest
      user: "${HOST_UID}"
      volumes:
         - ${ROOT_DIR}:${ROOT_DIR}
      working_dir: ${ROOT_DIR}
      environment:
         COMPOSER_CACHE_DIR: ".Build/.cache/composer"
      command: >
         /bin/sh -c "
           if [ ${SCRIPT_VERBOSE} -eq 1 ]; then
             set -x
           fi
           php -v | grep '^PHP';
           composer validate;
         "

   composer_normalize:
      image: typo3/core-testing-${DOCKER_PHP_IMAGE}:latest
      user: "${HOST_UID}"
      volumes:
         - ${ROOT_DIR}:${ROOT_DIR}
      working_dir: ${ROOT_DIR}
      environment:
         COMPOSER_CACHE_DIR: ".Build/.cache/composer"
      command: >
         /bin/sh -c "
           if [ ${SCRIPT_VERBOSE} -eq 1 ]; then
             set -x
           fi
           php -v | grep '^PHP';
           composer normalize ${COMPOSER_NORMALIZE_DRY_RUN};
         "

   lint:
      image: typo3/core-testing-${DOCKER_PHP_IMAGE}:latest
      user: "${HOST_UID}"
      volumes:
         - ${ROOT_DIR}:${ROOT_DIR}
      working_dir: ${ROOT_DIR}
      command: >
         /bin/sh -c "
           if [ ${SCRIPT_VERBOSE} -eq 1 ]; then
             set -x
           fi
           php -v | grep '^PHP';
           find . -name \\*.php ! -path "./.Build/\\*" -print0 | xargs -0 -n1 -P4 php -dxdebug.mode=off -l >/dev/null
         "

   rector:
       image: typo3/core-testing-${DOCKER_PHP_IMAGE}:latest
       user: "${HOST_UID}"
       volumes:
           - ${ROOT_DIR}:${ROOT_DIR}
       working_dir: ${ROOT_DIR}
       extra_hosts:
           - "host.docker.internal:host-gateway"
       command: >
           /bin/sh -c "
             if [ ${SCRIPT_VERBOSE} -eq 1 ]; then
               set -x
             fi
             php -v | grep '^PHP';
             php -dxdebug.mode=off \
               .Build/bin/rector \
                 ${CGLCHECK_DRY_RUN} \
                 --clear-cache
           "
